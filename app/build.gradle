apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply from: '../app01.gradle'
apply from: '../app02.gradle'

android {

    signingConfigs {
        app01 {
            keyAlias 'app01'
            keyPassword 'android1024'
            storeFile file('../keystore.jks')
            storePassword 'android1024'
        }
        app02 {
            keyAlias 'app02'
            keyPassword 'android1024'
            storeFile file('../keystore2.jks')
            storePassword 'android1024'
        }
    }

    compileSdkVersion 28
    defaultConfig {
        applicationId "com.kk.multygradle"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        flavorDimensions ""
    }
    buildTypes {
        def taskNames = project.gradle.startParameter.taskNames
        def signDef = null
        if (taskNames.size()>0) {
            // assembleApp01BetaDebug
            if (taskNames.get(0).contains('App01')) {
                signDef = signingConfigs.app01
            } else if (taskNames.get(0).contains('App02')) {
                signDef = signingConfigs.app02
            }
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signDef
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signDef
        }
    }

    productFlavors {
        app01 app01Cfg
        app02 app02Cfg
    }

    applicationVariants.all { variant ->
        def flavor = variant.productFlavors[0]
        variant.buildConfigField "String", "API_URL", "\"${flavor.API_URL[variant.buildType.name]}\""
        variant.buildConfigField "String", "SDK_OCR_APP_ID", "\"${flavor.OCR_APP_ID[variant.buildType.name]}\""
        variant.buildConfigField "String", "SDK_OCR_APP_SECRET", "\"${flavor.OCR_APP_SECRET[variant.buildType.name]}\""

        variant.outputs.all {
            def apkName = "${flavor.name}_v${mergedFlavor.versionName}_${buildType.name}_${buildTime()}"
            outputFileName = apkName + ".apk"
        }
    }
}

static def buildTime() {
    def date = new Date()
    def formattedDate = date.format('MMddHHmm')
    return formattedDate
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
